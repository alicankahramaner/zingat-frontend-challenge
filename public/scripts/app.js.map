{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["var App = {\n    Init: function () {\n        App.Helper.Import(this);\n    },\n\n    Helper: {\n        Import: function (self) {\n            var obj;\n\n            for (obj in self) {\n                if (self.hasOwnProperty(obj)) {\n                    var _method = self[obj];\n                    if (_method.selector !== undefined && _method.init !== undefined) {\n                        if (document.querySelectorAll(_method.selector).length) {\n                            _method.init();\n                        }\n                    }\n                }\n            }\n        },\n\n        isMobile() {\n            return window.innerWidth < 960;\n        },\n\n        Http: (() => {\n            var http = new XMLHttpRequest();\n            var loading = document.getElementById('loading');\n\n            var instance = async (type = 'POST' || 'GET', url = '', data = {}, callback = Function) => {\n                return new Promise((resolve, reject) => {\n                    loading.classList.toggle('show');\n                    http.open(\"POST\", url, true);\n\n                    type === 'POST' ? http.setRequestHeader(\"Content-Type\", \"application/json\") : null;\n\n                    http.onreadystatechange = function () {\n                        if (this.readyState == 4 && this.status == 200) {\n                            loading.classList.toggle('show');\n                            resolve(JSON.parse(http.responseText));\n                        }\n                    };\n                    http.onerror = reject;\n\n                    http.send(JSON.stringify(data));\n\n                });\n            }\n\n            var post = async (url = '', data = {}) => {\n                return await instance('POST', url, data);\n            }\n\n            var get = async (url = '', data = {}) => {\n                return await instance('GET', url, data);\n            }\n\n            return {\n                post,\n                get\n            }\n        })()\n    },\n\n    Login: {\n        selector: '.login-form',\n        init() {\n            var loginForm = document.querySelector(this.selector);\n            loginForm.addEventListener('submit', async function (e) {\n                e.preventDefault();\n                var data = {\n                    username: loginForm.elements['username'].value,\n                    password: loginForm.elements['password'].value\n                };\n\n                if (data.username === '' || data.password === '') {\n                    alert('Lütfen bütün alanları doldurunuz.');\n                    return;\n                }\n                let res = await App.Helper.Http.post('/login', data);\n                if (!res.success) {\n                    alert('Hatalı kullanıcı adı veya şifre');\n                    return;\n                }\n                location.href = '/myalbums';\n            });\n        }\n    },\n\n    MyAlbums: {\n        selector: '#myalbums',\n        albumLinkList: document.getElementById('albumList'),\n        albumImages: document.getElementById('albumImages'),\n        previewAlbumImage = document.getElementById('previewAlbumImage'),\n\n        init() {\n            this.getAlbumList();\n        },\n        async getAlbumList() {\n            let list = await App.Helper.Http.post('/myalbums', {\n                size: 10\n            });\n\n            if (!list.success) {\n                alert('Albümler getirilemedi tekrar deneyiniz.');\n                return;\n            }\n\n            this.fillAlbumList(list.data);\n\n        },\n\n        fillAlbumList(list = []) {\n            for (var i = 0; i < list.length; i++) {\n                let item = list[i];\n                let link = document.createElement('a');\n\n                link.text = item.title;\n                link.href = 'javascript:;'\n                link.onclick = (e) => {\n                    this.getAlbumDetail(e, item.id);\n                }\n                this.albumLinkList.appendChild(link);\n            }\n        },\n\n        async getAlbumDetail(event, albumId = 0) {\n            if (albumId === 0) {\n                return;\n            }\n\n            let img = this.previewAlbumImage.querySelector('img');\n            if (img) {\n                this.previewAlbumImage.removeChild(img);\n            }\n\n            let activeItem = this.albumLinkList.querySelector('.active');\n            if (activeItem) {\n                activeItem.classList.remove('active');\n            }\n\n            event.target.classList.add('active');\n\n            let res = await App.Helper.Http.post('/getAlbum', {\n                albumId: albumId,\n                size: App.Helper.isMobile() ? 4 : 8\n            });\n\n            if (!res.success) {\n                alert('Bir hata oluştu lütfen tekrar deneyiniz.');\n                return;\n            }\n\n            this.fillAlbumImage(res.data);\n\n        },\n\n        fillAlbumImage(images = []) {\n            this.albumImages.innerHTML = '';\n            images.forEach((image) => {\n                let img = document.createElement('img');\n\n                img.src = image.thumbnailUrl;\n                img.alt = image.title;\n                img.dataset.fullsize = image.url;\n\n                img.onclick = (event) => {\n                    this.getAlbumPhotoFullSize(event.target, image.url);\n                }\n\n                this.albumImages.appendChild(img);\n            });\n        },\n\n        getAlbumPhotoFullSize(clickedImage, src = '') {\n            if (src === '') {\n                return;\n            }\n\n            let activeItem = this.albumImages.querySelector('.active');\n            console.log('active img',activeItem);\n            if (activeItem) {\n                activeItem.classList.remove('active');\n            }\n\n            clickedImage.classList.add('active');\n\n            let img = this.previewAlbumImage.querySelector('img');\n            if (!img) {\n                img = document.createElement('img');\n                this.previewAlbumImage.appendChild(img);\n            }\n\n            img.src = src;\n        }\n    }\n\n}\n\nwindow.addEventListener('load', () => {\n    App.Init();\n});"],"file":"app.js"}